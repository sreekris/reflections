How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Using the tool gave the result pretty quick and with less strain I could find out the mistake.    

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Will let me know why the changes have been made. Becomes easy for me to discard or to retain the changes. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Manual commits are better suited for programs whereas automatic commits are good for documents with data

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git recognises the relation between different files in a repository where as others do not.

How can you use the commands git log and git diff to view the history of files?

use git log to know the ids of different changes made and then use git diff to know the detailed difference between two different versions.

How might using version control make you more confident to make changes that
could break something?

with version control we have the option of reverting back to any previous position comfortbly.

Now that you have your workspace set up, what do you want to try using Git for?

For all my programming assignments.